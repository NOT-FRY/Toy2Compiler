Program ::= Iter1 Procedure Iter2
Iter1 ::= VarDecl Iter
      | Function Iter
      | /* empty */
Iter2 ::= VarDecl Iter
      | Function Iter
      | Procedure Iter
      | /* empty */


VarDecl ::= VAR Decls
Decls ::= Ids COLON Type SEMI Decls
	| Ids ASSIGN Consts SEMI Decls
	| Ids COLON Type SEMI ENDVAR
	| Ids ASSIGN Consts SEMI ENDVAR

Ids ::= ID COMMA Ids
        | ID

Consts ::= Const COMMA Consts
	| Const
Const ::= REAL_CONST
	| INTEGER_CONST
	| STRING_CONST
	| TRUE
	| FALSE

Type ::= REAL
	| INTEGER
	| STRING
	| BOOLEAN

Function  ::= FUNCTION ID LPAR FuncParams RPAR TYPERETURN Types COLON Body ENDFUNCTION

FuncParams ::= ID COLON Type OtherFuncParams
	    | /* empty */
OtherFuncParams ::= COMMA ID COLON Type OtherFuncParams
	    | /* empty */

Types ::= Type COMMA Types
	| Type

Procedure ::= PROCEDURE ID LPAR ProcParams RPAR COLON Body ENDPROCEDURE

ProcParams::= ProcParamId COLON Type OtherProcParams
	   | /* empty */
OtherProcParams ::= COMMA ProcParamId COLON Type OtherProcParams
	   | /* empty */

ProcParamId ::= ID
	    | OUT ID

Body ::= VarDecl Body
	| Stat Body
	| /* empty */

Stat ::= Ids ASSIGN Exprs SEMI
	 | ProcCall  SEMI
	 | RETURN Exprs SEMI
	 | WRITE IOArgs SEMI
	 | WRITERETURN IOArgs SEMI
	 | READ IOArgs SEMI
	 | IfStat SEMI
	 | WhileStat SEMI

FunCall ::= ID LPAR Exprs RPAR           /* chiamata con almeno un parametro */
         | ID LPAR RPAR                   /* chiamata con nessun parametro */

ProcCall ::= ID LPAR ProcExprs RPAR    /* chiamata con almeno un parametro */
         | ID LPAR RPAR             /* chiamata con nessun parametro */

IfStat ::= IF Expr THEN Body Elifs Else ENDIF

Elifs ::= Elif Elifs
      | /* empty */

Elif ::= ELIF Expr THEN Body

Else ::= ELSE Body
     | /* empty */

WhileStat ::= WHILE Expr DO Body ENDWHILE

IOArgs ::= Expr    /* qui l'Expr corretta Ã¨ concatenazione di stringhe o singola stringa*/
       |  Expr DOLLARSIGN LPAR Expr RPAR IOArgs
       |  DOLLARSIGN LPAR Expr RPAR IOArgs
       | /* empty */

ProcExprs::= Expr COMMA ProcExprs
	  | REF ID COMMA ProcExprs
          | Expr
	  | REF ID

Exprs ::= Expr COMMA Exprs
	| Expr

Expr ::= FunCall
	| REAL_CONST
    | INTEGER_CONST
	| STRING_CONST
	| ID
    | TRUE
    | FALSE
    | Expr  PLUS Expr
	| Expr  MINUS Expr
	| Expr  TIMES Expr
	| Expr  DIV Expr
	| Expr  AND Expr
	| Expr  OR Expr
	| Expr  GT Expr
	| Expr  GE Expr
	| Expr  LT Expr
	| Expr  LE Expr
	| Expr  EQ Expr
	| Expr  NE Expr
	| LPAR Expr RPAR
	| MINUS Expr
	| NOT Expr